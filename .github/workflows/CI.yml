name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  update_version:
    name: Read and update version
    runs-on: ubuntu-latest

    outputs:
      # 定义输出变量 version，以便在其他job中引用
      new_version: ${{ steps.version.outputs.new_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 更新版本号
        id: version
        run: |
          # 读取版本号
          VERSION=$(yq e .version pubspec.yaml)

          # 输出原版本号为新版本号
          NEW_VERSION=$VERSION

          # 输出新版本号
          echo "New version: $NEW_VERSION"

          # 设置新版本号为输出变量
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

  android:
    name: Build CI (Android)
    needs: update_version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 构建Java环境
        uses: actions/setup-java@v3
        with:
            distribution: "zulu"
            java-version: "17"
            token: ${{secrets.GIT_TOKEN}}

      - name: 检查缓存
        uses: actions/cache@v2
        id: cache-flutter
        with:
            path: /root/flutter-sdk
            key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: 安装Flutter
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
            flutter-version: 3.16.5
            channel: any

      - name: 下载项目依赖
        run: flutter pub get

      - name: 解码生成 jks
        run: echo $KEYSTORE_BASE64 | base64 -di > android/app/vvex.jks
        env:
            KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}


      - name: flutter build apk (arm64 v8a only)
        run: flutter build apk --release --split-per-abi --target-platform android-arm64
        env:
            KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
            KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
            KEY_PASSWORD: ${{ secrets.KEY_PASSWORD}}


      - name: 重命名应用
        run: |
          for file in build/app/outputs/flutter-apk/app-*.apk; do
            if [[ $file =~ app-(.?*)release.apk ]]; then
              new_file_name="build/app/outputs/flutter-apk/Pili-${BASH_REMATCH[1]}${{ needs.update_version.outputs.new_version }}.apk"
              mv "$file" "$new_file_name"
            fi
          done

      - name: 上传
        uses: actions/upload-artifact@v3
        with:
          name: Pilipala-CI
          path: |
            build/app/outputs/flutter-apk/Pili-*.apk


  upload:
    runs-on: ubuntu-latest

    needs:
      - update_version
      - android
      

      
    steps:

      - uses: actions/download-artifact@v3
        with:
          name: Pilipala-CI
          path: ./Pilipala-CI
          
      - name: Upload Pre-release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.update_version.outputs.new_version }}
          token: ${{ secrets.GIT_TOKEN }}
          commit: main
          tag: ${{ needs.update_version.outputs.new_version }}
          prerelease: true
          allowUpdates: true
          artifacts: Pilipala-CI/*

